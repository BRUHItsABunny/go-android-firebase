// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.18.1
// source: checkin.proto

package api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Sample data, if provided, is fished from a Nexus 7 (2013) / flo running Android 5.0
type CheckinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// unused
	Imei *string `protobuf:"bytes,1,opt,name=imei" json:"imei,omitempty"`
	// Gservices["android_id"] or 0 on first-checkin
	AndroidId *int64 `protobuf:"varint,2,opt,name=androidId" json:"androidId,omitempty"`
	// Gservices["digest"] or ""
	Digest  *string                 `protobuf:"bytes,3,opt,name=digest" json:"digest,omitempty"`
	Checkin *CheckinRequest_Checkin `protobuf:"bytes,4,req,name=checkin" json:"checkin,omitempty"`
	// unused
	DesiredBuild *string `protobuf:"bytes,5,opt,name=desiredBuild" json:"desiredBuild,omitempty"`
	// Locale.toString
	Locale *string `protobuf:"bytes,6,opt,name=locale" json:"locale,omitempty"`
	// GoogleSettingsContract.Partner["logging_id2"] (choosen randomly on first checkin)
	// eg. 12561488293572742346
	LoggingId *int64 `protobuf:"varint,7,opt,name=loggingId" json:"loggingId,omitempty"`
	// unused
	MarketCheckin *string `protobuf:"bytes,8,opt,name=marketCheckin" json:"marketCheckin,omitempty"`
	// NetworkInfo.getExtraInfo, WifiInfo.getMacAddress (12 hex-digits)
	// eg. d850e6abcdef
	MacAddress []string `protobuf:"bytes,9,rep,name=macAddress" json:"macAddress,omitempty"`
	// TelephonyManager.getDeviceId (14 hex-digits), not set on tablets
	Meid *string `protobuf:"bytes,10,opt,name=meid" json:"meid,omitempty"`
	// "[<email>]" followed by "<authToken>", empty string on first checkin
	AccountCookie []string `protobuf:"bytes,11,rep,name=accountCookie" json:"accountCookie,omitempty"`
	// TimeZone.getId
	// eg. GMT
	TimeZone *string `protobuf:"bytes,12,opt,name=timeZone" json:"timeZone,omitempty"`
	// security token as given on first checkin, not set on first checkin
	SecurityToken *uint64 `protobuf:"fixed64,13,opt,name=securityToken" json:"securityToken,omitempty"`
	// use 3
	Version *int32 `protobuf:"varint,14,opt,name=version" json:"version,omitempty"`
	// SHA-1 of each in /system/etc/security/otacerts.zip or "--IOException--" or "--no-output--"
	// eg. dKXTm1QH9QShGQwBM/4rg6/lCNQ=
	OtaCert []string `protobuf:"bytes,15,rep,name=otaCert" json:"otaCert,omitempty"`
	// Build.SERIAL != "unknown"
	// eg. 07d90b18
	Serial *string `protobuf:"bytes,16,opt,name=serial" json:"serial,omitempty"`
	// TelephonyManager.getDeviceId (8 hex-digits), not set on tablets
	Esn                 *string                      `protobuf:"bytes,17,opt,name=esn" json:"esn,omitempty"`
	DeviceConfiguration *CheckinRequest_DeviceConfig `protobuf:"bytes,18,opt,name=deviceConfiguration" json:"deviceConfiguration,omitempty"`
	// "ethernet" or "wifi"
	MacAddressType []string `protobuf:"bytes,19,rep,name=macAddressType" json:"macAddressType,omitempty"`
	// unknown, use 0 on pre- and first-checkin, and 1 for later checkins
	// also present on pre-checkin
	Fragment *int32 `protobuf:"varint,20,req,name=fragment" json:"fragment,omitempty"`
	// unknown
	UserName *string `protobuf:"bytes,21,opt,name=userName" json:"userName,omitempty"`
	// UserManager.getUserSerialNumber
	// eg. 0
	UserSerialNumber *int32 `protobuf:"varint,22,opt,name=userSerialNumber" json:"userSerialNumber,omitempty"`
}

func (x *CheckinRequest) Reset() {
	*x = CheckinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinRequest) ProtoMessage() {}

func (x *CheckinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinRequest.ProtoReflect.Descriptor instead.
func (*CheckinRequest) Descriptor() ([]byte, []int) {
	return file_checkin_proto_rawDescGZIP(), []int{0}
}

func (x *CheckinRequest) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *CheckinRequest) GetAndroidId() int64 {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return 0
}

func (x *CheckinRequest) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *CheckinRequest) GetCheckin() *CheckinRequest_Checkin {
	if x != nil {
		return x.Checkin
	}
	return nil
}

func (x *CheckinRequest) GetDesiredBuild() string {
	if x != nil && x.DesiredBuild != nil {
		return *x.DesiredBuild
	}
	return ""
}

func (x *CheckinRequest) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

func (x *CheckinRequest) GetLoggingId() int64 {
	if x != nil && x.LoggingId != nil {
		return *x.LoggingId
	}
	return 0
}

func (x *CheckinRequest) GetMarketCheckin() string {
	if x != nil && x.MarketCheckin != nil {
		return *x.MarketCheckin
	}
	return ""
}

func (x *CheckinRequest) GetMacAddress() []string {
	if x != nil {
		return x.MacAddress
	}
	return nil
}

func (x *CheckinRequest) GetMeid() string {
	if x != nil && x.Meid != nil {
		return *x.Meid
	}
	return ""
}

func (x *CheckinRequest) GetAccountCookie() []string {
	if x != nil {
		return x.AccountCookie
	}
	return nil
}

func (x *CheckinRequest) GetTimeZone() string {
	if x != nil && x.TimeZone != nil {
		return *x.TimeZone
	}
	return ""
}

func (x *CheckinRequest) GetSecurityToken() uint64 {
	if x != nil && x.SecurityToken != nil {
		return *x.SecurityToken
	}
	return 0
}

func (x *CheckinRequest) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *CheckinRequest) GetOtaCert() []string {
	if x != nil {
		return x.OtaCert
	}
	return nil
}

func (x *CheckinRequest) GetSerial() string {
	if x != nil && x.Serial != nil {
		return *x.Serial
	}
	return ""
}

func (x *CheckinRequest) GetEsn() string {
	if x != nil && x.Esn != nil {
		return *x.Esn
	}
	return ""
}

func (x *CheckinRequest) GetDeviceConfiguration() *CheckinRequest_DeviceConfig {
	if x != nil {
		return x.DeviceConfiguration
	}
	return nil
}

func (x *CheckinRequest) GetMacAddressType() []string {
	if x != nil {
		return x.MacAddressType
	}
	return nil
}

func (x *CheckinRequest) GetFragment() int32 {
	if x != nil && x.Fragment != nil {
		return *x.Fragment
	}
	return 0
}

func (x *CheckinRequest) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *CheckinRequest) GetUserSerialNumber() int32 {
	if x != nil && x.UserSerialNumber != nil {
		return *x.UserSerialNumber
	}
	return 0
}

type CheckinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatsOk               *bool                               `protobuf:"varint,1,opt,name=statsOk" json:"statsOk,omitempty"`
	Intent                []*CheckinResponse_Intent           `protobuf:"bytes,2,rep,name=intent" json:"intent,omitempty"`
	TimeMs                *int64                              `protobuf:"varint,3,opt,name=timeMs" json:"timeMs,omitempty"`
	Digest                *string                             `protobuf:"bytes,4,opt,name=digest" json:"digest,omitempty"`
	Setting               []*CheckinResponse_GservicesSetting `protobuf:"bytes,5,rep,name=setting" json:"setting,omitempty"`
	MarketOk              *bool                               `protobuf:"varint,6,opt,name=marketOk" json:"marketOk,omitempty"`
	AndroidId             *uint64                             `protobuf:"fixed64,7,opt,name=androidId" json:"androidId,omitempty"`
	SecurityToken         *uint64                             `protobuf:"fixed64,8,opt,name=securityToken" json:"securityToken,omitempty"`
	SettingsDiff          *bool                               `protobuf:"varint,9,opt,name=settingsDiff" json:"settingsDiff,omitempty"`
	DeleteSetting         []string                            `protobuf:"bytes,10,rep,name=deleteSetting" json:"deleteSetting,omitempty"`
	VersionInfo           *string                             `protobuf:"bytes,11,opt,name=versionInfo" json:"versionInfo,omitempty"`
	DeviceDataVersionInfo *string                             `protobuf:"bytes,12,opt,name=deviceDataVersionInfo" json:"deviceDataVersionInfo,omitempty"`
}

func (x *CheckinResponse) Reset() {
	*x = CheckinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinResponse) ProtoMessage() {}

func (x *CheckinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinResponse.ProtoReflect.Descriptor instead.
func (*CheckinResponse) Descriptor() ([]byte, []int) {
	return file_checkin_proto_rawDescGZIP(), []int{1}
}

func (x *CheckinResponse) GetStatsOk() bool {
	if x != nil && x.StatsOk != nil {
		return *x.StatsOk
	}
	return false
}

func (x *CheckinResponse) GetIntent() []*CheckinResponse_Intent {
	if x != nil {
		return x.Intent
	}
	return nil
}

func (x *CheckinResponse) GetTimeMs() int64 {
	if x != nil && x.TimeMs != nil {
		return *x.TimeMs
	}
	return 0
}

func (x *CheckinResponse) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *CheckinResponse) GetSetting() []*CheckinResponse_GservicesSetting {
	if x != nil {
		return x.Setting
	}
	return nil
}

func (x *CheckinResponse) GetMarketOk() bool {
	if x != nil && x.MarketOk != nil {
		return *x.MarketOk
	}
	return false
}

func (x *CheckinResponse) GetAndroidId() uint64 {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return 0
}

func (x *CheckinResponse) GetSecurityToken() uint64 {
	if x != nil && x.SecurityToken != nil {
		return *x.SecurityToken
	}
	return 0
}

func (x *CheckinResponse) GetSettingsDiff() bool {
	if x != nil && x.SettingsDiff != nil {
		return *x.SettingsDiff
	}
	return false
}

func (x *CheckinResponse) GetDeleteSetting() []string {
	if x != nil {
		return x.DeleteSetting
	}
	return nil
}

func (x *CheckinResponse) GetVersionInfo() string {
	if x != nil && x.VersionInfo != nil {
		return *x.VersionInfo
	}
	return ""
}

func (x *CheckinResponse) GetDeviceDataVersionInfo() string {
	if x != nil && x.DeviceDataVersionInfo != nil {
		return *x.DeviceDataVersionInfo
	}
	return ""
}

type CheckinRequest_Checkin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// empty Build on pre-checkin
	Build *CheckinRequest_Checkin_Build `protobuf:"bytes,1,req,name=build" json:"build,omitempty"`
	// last checkin ms or 0 if first checkin
	// eg. 0
	LastCheckinMs *int64 `protobuf:"varint,2,opt,name=lastCheckinMs" json:"lastCheckinMs,omitempty"`
	// eg. ("event_log_start",~,1424612602652) on first checkin
	Event []*CheckinRequest_Checkin_Event `protobuf:"bytes,3,rep,name=event" json:"event,omitempty"`
	// unknown, n/a on first checkin
	Stat []*CheckinRequest_Checkin_Statistic `protobuf:"bytes,4,rep,name=stat" json:"stat,omitempty"`
	// unused
	RequestedGroup []string `protobuf:"bytes,5,rep,name=requestedGroup" json:"requestedGroup,omitempty"`
	// TelephonyManager.getNetworkOperator != null|empty
	CellOperator *string `protobuf:"bytes,6,opt,name=cellOperator" json:"cellOperator,omitempty"`
	// TelephonyManager.getSimOperator != null|empty
	SimOperator *string `protobuf:"bytes,7,opt,name=simOperator" json:"simOperator,omitempty"`
	// "WIFI::" | ("mobile" | "notmobile" | "unknown") + "-" + ("roaming" | "notroaming" | "unknown")
	Roaming *string `protobuf:"bytes,8,opt,name=roaming" json:"roaming,omitempty"`
	// UserHandle.myUserId
	// eg. 0
	UserNumber *int32 `protobuf:"varint,9,opt,name=userNumber" json:"userNumber,omitempty"`
}

func (x *CheckinRequest_Checkin) Reset() {
	*x = CheckinRequest_Checkin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinRequest_Checkin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinRequest_Checkin) ProtoMessage() {}

func (x *CheckinRequest_Checkin) ProtoReflect() protoreflect.Message {
	mi := &file_checkin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinRequest_Checkin.ProtoReflect.Descriptor instead.
func (*CheckinRequest_Checkin) Descriptor() ([]byte, []int) {
	return file_checkin_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CheckinRequest_Checkin) GetBuild() *CheckinRequest_Checkin_Build {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *CheckinRequest_Checkin) GetLastCheckinMs() int64 {
	if x != nil && x.LastCheckinMs != nil {
		return *x.LastCheckinMs
	}
	return 0
}

func (x *CheckinRequest_Checkin) GetEvent() []*CheckinRequest_Checkin_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *CheckinRequest_Checkin) GetStat() []*CheckinRequest_Checkin_Statistic {
	if x != nil {
		return x.Stat
	}
	return nil
}

func (x *CheckinRequest_Checkin) GetRequestedGroup() []string {
	if x != nil {
		return x.RequestedGroup
	}
	return nil
}

func (x *CheckinRequest_Checkin) GetCellOperator() string {
	if x != nil && x.CellOperator != nil {
		return *x.CellOperator
	}
	return ""
}

func (x *CheckinRequest_Checkin) GetSimOperator() string {
	if x != nil && x.SimOperator != nil {
		return *x.SimOperator
	}
	return ""
}

func (x *CheckinRequest_Checkin) GetRoaming() string {
	if x != nil && x.Roaming != nil {
		return *x.Roaming
	}
	return ""
}

func (x *CheckinRequest_Checkin) GetUserNumber() int32 {
	if x != nil && x.UserNumber != nil {
		return *x.UserNumber
	}
	return 0
}

type CheckinRequest_DeviceConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ConfigurationInfo.reqTouchScreen
	// eg. 3
	TouchScreen *int32 `protobuf:"varint,1,opt,name=touchScreen" json:"touchScreen,omitempty"`
	// ConfigurationInfo.reqKeyboardType
	// eg. 1
	KeyboardType *int32 `protobuf:"varint,2,opt,name=keyboardType" json:"keyboardType,omitempty"`
	// ConfigurationInfo.reqNavigation
	// eg. 1
	Navigation *int32 `protobuf:"varint,3,opt,name=navigation" json:"navigation,omitempty"`
	// ConfigurationInfo.screenLayout
	// eg. 3
	ScreenLayout *int32 `protobuf:"varint,4,opt,name=screenLayout" json:"screenLayout,omitempty"`
	// ConfigurationInfo.reqInputFeatures & ConfigurationInfo.INPUT_FEATURE_HARD_KEYBOARD
	// eg. 0
	HasHardKeyboard *bool `protobuf:"varint,5,opt,name=hasHardKeyboard" json:"hasHardKeyboard,omitempty"`
	// ConfigurationInfo.reqInputFeatures & ConfigurationInfo.INPUT_FEATURE_FIVE_WAY_NAV
	// eg. 0
	HasFiveWayNavigation *bool `protobuf:"varint,6,opt,name=hasFiveWayNavigation" json:"hasFiveWayNavigation,omitempty"`
	// DisplayMetrics.densityDpi
	// eg. 320
	DensityDpi *int32 `protobuf:"varint,7,opt,name=densityDpi" json:"densityDpi,omitempty"`
	// ConfigurationInfo.reqGlEsVersion
	// eg. 196608
	GlEsVersion *int32 `protobuf:"varint,8,opt,name=glEsVersion" json:"glEsVersion,omitempty"`
	// PackageManager.getSystemSharedLibraryNames
	// eg. "android.test.runner", "com.android.future.usb.accessory", "com.android.location.provider",
	//     "com.android.media.remotedisplay", "com.android.mediadrm.signer", "com.google.android.maps",
	//     "com.google.android.media.effects", "com.google.widevine.software.drm", "javax.obex"
	SharedLibrary []string `protobuf:"bytes,9,rep,name=sharedLibrary" json:"sharedLibrary,omitempty"`
	// PackageManager.getSystemAvailableFeatures
	// eg. android.hardware.[...]
	AvailableFeature []string `protobuf:"bytes,10,rep,name=availableFeature" json:"availableFeature,omitempty"`
	// Build.CPU_ABI and Build.CPU_ABI2 != "unknown"
	// eg. "armeabi-v7a", "armeabi"
	NativePlatform []string `protobuf:"bytes,11,rep,name=nativePlatform" json:"nativePlatform,omitempty"`
	// DisplayMetrics.widthPixels
	// eg. 1200
	WidthPixels *int32 `protobuf:"varint,12,opt,name=widthPixels" json:"widthPixels,omitempty"`
	// DisplayMetrics.heightPixels
	// eg. 1824
	HeightPixels *int32 `protobuf:"varint,13,opt,name=heightPixels" json:"heightPixels,omitempty"`
	// Context.getAssets.getLocales
	// eg. [...], "en-US", [...]
	Locale []string `protobuf:"bytes,14,rep,name=locale" json:"locale,omitempty"`
	// GLES10.glGetString(GLES10.GL_EXTENSIONS)
	// eg. "GL_AMD_compressed_ATC_texture", [...]
	GlExtension []string `protobuf:"bytes,15,rep,name=glExtension" json:"glExtension,omitempty"`
	// unused
	DeviceClass *int32 `protobuf:"varint,16,opt,name=deviceClass" json:"deviceClass,omitempty"`
	// unused
	MaxApkDownloadSizeMb *int32 `protobuf:"varint,17,opt,name=maxApkDownloadSizeMb" json:"maxApkDownloadSizeMb,omitempty"`
}

func (x *CheckinRequest_DeviceConfig) Reset() {
	*x = CheckinRequest_DeviceConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinRequest_DeviceConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinRequest_DeviceConfig) ProtoMessage() {}

func (x *CheckinRequest_DeviceConfig) ProtoReflect() protoreflect.Message {
	mi := &file_checkin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinRequest_DeviceConfig.ProtoReflect.Descriptor instead.
func (*CheckinRequest_DeviceConfig) Descriptor() ([]byte, []int) {
	return file_checkin_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CheckinRequest_DeviceConfig) GetTouchScreen() int32 {
	if x != nil && x.TouchScreen != nil {
		return *x.TouchScreen
	}
	return 0
}

func (x *CheckinRequest_DeviceConfig) GetKeyboardType() int32 {
	if x != nil && x.KeyboardType != nil {
		return *x.KeyboardType
	}
	return 0
}

func (x *CheckinRequest_DeviceConfig) GetNavigation() int32 {
	if x != nil && x.Navigation != nil {
		return *x.Navigation
	}
	return 0
}

func (x *CheckinRequest_DeviceConfig) GetScreenLayout() int32 {
	if x != nil && x.ScreenLayout != nil {
		return *x.ScreenLayout
	}
	return 0
}

func (x *CheckinRequest_DeviceConfig) GetHasHardKeyboard() bool {
	if x != nil && x.HasHardKeyboard != nil {
		return *x.HasHardKeyboard
	}
	return false
}

func (x *CheckinRequest_DeviceConfig) GetHasFiveWayNavigation() bool {
	if x != nil && x.HasFiveWayNavigation != nil {
		return *x.HasFiveWayNavigation
	}
	return false
}

func (x *CheckinRequest_DeviceConfig) GetDensityDpi() int32 {
	if x != nil && x.DensityDpi != nil {
		return *x.DensityDpi
	}
	return 0
}

func (x *CheckinRequest_DeviceConfig) GetGlEsVersion() int32 {
	if x != nil && x.GlEsVersion != nil {
		return *x.GlEsVersion
	}
	return 0
}

func (x *CheckinRequest_DeviceConfig) GetSharedLibrary() []string {
	if x != nil {
		return x.SharedLibrary
	}
	return nil
}

func (x *CheckinRequest_DeviceConfig) GetAvailableFeature() []string {
	if x != nil {
		return x.AvailableFeature
	}
	return nil
}

func (x *CheckinRequest_DeviceConfig) GetNativePlatform() []string {
	if x != nil {
		return x.NativePlatform
	}
	return nil
}

func (x *CheckinRequest_DeviceConfig) GetWidthPixels() int32 {
	if x != nil && x.WidthPixels != nil {
		return *x.WidthPixels
	}
	return 0
}

func (x *CheckinRequest_DeviceConfig) GetHeightPixels() int32 {
	if x != nil && x.HeightPixels != nil {
		return *x.HeightPixels
	}
	return 0
}

func (x *CheckinRequest_DeviceConfig) GetLocale() []string {
	if x != nil {
		return x.Locale
	}
	return nil
}

func (x *CheckinRequest_DeviceConfig) GetGlExtension() []string {
	if x != nil {
		return x.GlExtension
	}
	return nil
}

func (x *CheckinRequest_DeviceConfig) GetDeviceClass() int32 {
	if x != nil && x.DeviceClass != nil {
		return *x.DeviceClass
	}
	return 0
}

func (x *CheckinRequest_DeviceConfig) GetMaxApkDownloadSizeMb() int32 {
	if x != nil && x.MaxApkDownloadSizeMb != nil {
		return *x.MaxApkDownloadSizeMb
	}
	return 0
}

type CheckinRequest_Checkin_Build struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Build.FINGERPRINT
	// eg. google/razor/flo:5.0.1/LRX22C/1602158:user/release-keys
	Fingerprint *string `protobuf:"bytes,1,opt,name=fingerprint" json:"fingerprint,omitempty"`
	// Build.HARDWARE
	// eg. flo
	Hardware *string `protobuf:"bytes,2,opt,name=hardware" json:"hardware,omitempty"`
	// Build.BRAND
	// eg. google
	Brand *string `protobuf:"bytes,3,opt,name=brand" json:"brand,omitempty"`
	// Build.getRadioVersion()
	Radio *string `protobuf:"bytes,4,opt,name=radio" json:"radio,omitempty"`
	// Build.BOOTLOADER
	// eg. FLO-04.04
	Bootloader *string `protobuf:"bytes,5,opt,name=bootloader" json:"bootloader,omitempty"`
	// GoogleSettingsContract.Partner["client_id"]
	// eg. android-google
	ClientId *string `protobuf:"bytes,6,opt,name=clientId" json:"clientId,omitempty"`
	// Build.TIME / 1000L
	// eg. 1416533192
	Time *int64 `protobuf:"varint,7,opt,name=time" json:"time,omitempty"`
	// PackageInfo.versionCode
	// eg. 6188736
	PackageVersionCode *int32 `protobuf:"varint,8,opt,name=packageVersionCode" json:"packageVersionCode,omitempty"`
	// Build.DEVICE
	// eg. flo
	Device *string `protobuf:"bytes,9,opt,name=device" json:"device,omitempty"`
	// Build.VERSION.SDK_INT
	// eg. 21
	SdkVersion *int32 `protobuf:"varint,10,opt,name=sdkVersion" json:"sdkVersion,omitempty"`
	// Build.MODEL
	// eg. Nexus 7
	Model *string `protobuf:"bytes,11,opt,name=model" json:"model,omitempty"`
	// Build.MANUFACTURER
	// eg. asus
	Manufacturer *string `protobuf:"bytes,12,opt,name=manufacturer" json:"manufacturer,omitempty"`
	// Build.PRODUCT
	// eg. razor
	Product *string `protobuf:"bytes,13,opt,name=product" json:"product,omitempty"`
	// fileExists("/system/recovery-from-boot.p")
	// eg. false
	OtaInstalled *bool `protobuf:"varint,14,opt,name=otaInstalled" json:"otaInstalled,omitempty"`
}

func (x *CheckinRequest_Checkin_Build) Reset() {
	*x = CheckinRequest_Checkin_Build{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkin_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinRequest_Checkin_Build) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinRequest_Checkin_Build) ProtoMessage() {}

func (x *CheckinRequest_Checkin_Build) ProtoReflect() protoreflect.Message {
	mi := &file_checkin_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinRequest_Checkin_Build.ProtoReflect.Descriptor instead.
func (*CheckinRequest_Checkin_Build) Descriptor() ([]byte, []int) {
	return file_checkin_proto_rawDescGZIP(), []int{0, 0, 0}
}

func (x *CheckinRequest_Checkin_Build) GetFingerprint() string {
	if x != nil && x.Fingerprint != nil {
		return *x.Fingerprint
	}
	return ""
}

func (x *CheckinRequest_Checkin_Build) GetHardware() string {
	if x != nil && x.Hardware != nil {
		return *x.Hardware
	}
	return ""
}

func (x *CheckinRequest_Checkin_Build) GetBrand() string {
	if x != nil && x.Brand != nil {
		return *x.Brand
	}
	return ""
}

func (x *CheckinRequest_Checkin_Build) GetRadio() string {
	if x != nil && x.Radio != nil {
		return *x.Radio
	}
	return ""
}

func (x *CheckinRequest_Checkin_Build) GetBootloader() string {
	if x != nil && x.Bootloader != nil {
		return *x.Bootloader
	}
	return ""
}

func (x *CheckinRequest_Checkin_Build) GetClientId() string {
	if x != nil && x.ClientId != nil {
		return *x.ClientId
	}
	return ""
}

func (x *CheckinRequest_Checkin_Build) GetTime() int64 {
	if x != nil && x.Time != nil {
		return *x.Time
	}
	return 0
}

func (x *CheckinRequest_Checkin_Build) GetPackageVersionCode() int32 {
	if x != nil && x.PackageVersionCode != nil {
		return *x.PackageVersionCode
	}
	return 0
}

func (x *CheckinRequest_Checkin_Build) GetDevice() string {
	if x != nil && x.Device != nil {
		return *x.Device
	}
	return ""
}

func (x *CheckinRequest_Checkin_Build) GetSdkVersion() int32 {
	if x != nil && x.SdkVersion != nil {
		return *x.SdkVersion
	}
	return 0
}

func (x *CheckinRequest_Checkin_Build) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *CheckinRequest_Checkin_Build) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *CheckinRequest_Checkin_Build) GetProduct() string {
	if x != nil && x.Product != nil {
		return *x.Product
	}
	return ""
}

func (x *CheckinRequest_Checkin_Build) GetOtaInstalled() bool {
	if x != nil && x.OtaInstalled != nil {
		return *x.OtaInstalled
	}
	return false
}

type CheckinRequest_Checkin_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag    *string `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Value  *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	TimeMs *int64  `protobuf:"varint,3,opt,name=timeMs" json:"timeMs,omitempty"`
}

func (x *CheckinRequest_Checkin_Event) Reset() {
	*x = CheckinRequest_Checkin_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkin_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinRequest_Checkin_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinRequest_Checkin_Event) ProtoMessage() {}

func (x *CheckinRequest_Checkin_Event) ProtoReflect() protoreflect.Message {
	mi := &file_checkin_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinRequest_Checkin_Event.ProtoReflect.Descriptor instead.
func (*CheckinRequest_Checkin_Event) Descriptor() ([]byte, []int) {
	return file_checkin_proto_rawDescGZIP(), []int{0, 0, 1}
}

func (x *CheckinRequest_Checkin_Event) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *CheckinRequest_Checkin_Event) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *CheckinRequest_Checkin_Event) GetTimeMs() int64 {
	if x != nil && x.TimeMs != nil {
		return *x.TimeMs
	}
	return 0
}

type CheckinRequest_Checkin_Statistic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   *string  `protobuf:"bytes,1,req,name=tag" json:"tag,omitempty"`
	Count *int32   `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
	Sum   *float32 `protobuf:"fixed32,3,opt,name=sum" json:"sum,omitempty"`
}

func (x *CheckinRequest_Checkin_Statistic) Reset() {
	*x = CheckinRequest_Checkin_Statistic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkin_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinRequest_Checkin_Statistic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinRequest_Checkin_Statistic) ProtoMessage() {}

func (x *CheckinRequest_Checkin_Statistic) ProtoReflect() protoreflect.Message {
	mi := &file_checkin_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinRequest_Checkin_Statistic.ProtoReflect.Descriptor instead.
func (*CheckinRequest_Checkin_Statistic) Descriptor() ([]byte, []int) {
	return file_checkin_proto_rawDescGZIP(), []int{0, 0, 2}
}

func (x *CheckinRequest_Checkin_Statistic) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *CheckinRequest_Checkin_Statistic) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

func (x *CheckinRequest_Checkin_Statistic) GetSum() float32 {
	if x != nil && x.Sum != nil {
		return *x.Sum
	}
	return 0
}

type CheckinResponse_Intent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action    *string                         `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	DataUri   *string                         `protobuf:"bytes,2,opt,name=dataUri" json:"dataUri,omitempty"`
	MimeType  *string                         `protobuf:"bytes,3,opt,name=mimeType" json:"mimeType,omitempty"`
	JavaClass *string                         `protobuf:"bytes,4,opt,name=javaClass" json:"javaClass,omitempty"`
	Extra     []*CheckinResponse_Intent_Extra `protobuf:"bytes,5,rep,name=extra" json:"extra,omitempty"`
}

func (x *CheckinResponse_Intent) Reset() {
	*x = CheckinResponse_Intent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkin_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinResponse_Intent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinResponse_Intent) ProtoMessage() {}

func (x *CheckinResponse_Intent) ProtoReflect() protoreflect.Message {
	mi := &file_checkin_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinResponse_Intent.ProtoReflect.Descriptor instead.
func (*CheckinResponse_Intent) Descriptor() ([]byte, []int) {
	return file_checkin_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CheckinResponse_Intent) GetAction() string {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return ""
}

func (x *CheckinResponse_Intent) GetDataUri() string {
	if x != nil && x.DataUri != nil {
		return *x.DataUri
	}
	return ""
}

func (x *CheckinResponse_Intent) GetMimeType() string {
	if x != nil && x.MimeType != nil {
		return *x.MimeType
	}
	return ""
}

func (x *CheckinResponse_Intent) GetJavaClass() string {
	if x != nil && x.JavaClass != nil {
		return *x.JavaClass
	}
	return ""
}

func (x *CheckinResponse_Intent) GetExtra() []*CheckinResponse_Intent_Extra {
	if x != nil {
		return x.Extra
	}
	return nil
}

type CheckinResponse_GservicesSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  []byte `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *CheckinResponse_GservicesSetting) Reset() {
	*x = CheckinResponse_GservicesSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkin_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinResponse_GservicesSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinResponse_GservicesSetting) ProtoMessage() {}

func (x *CheckinResponse_GservicesSetting) ProtoReflect() protoreflect.Message {
	mi := &file_checkin_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinResponse_GservicesSetting.ProtoReflect.Descriptor instead.
func (*CheckinResponse_GservicesSetting) Descriptor() ([]byte, []int) {
	return file_checkin_proto_rawDescGZIP(), []int{1, 1}
}

func (x *CheckinResponse_GservicesSetting) GetName() []byte {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *CheckinResponse_GservicesSetting) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type CheckinResponse_Intent_Extra struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,7,opt,name=value" json:"value,omitempty"`
}

func (x *CheckinResponse_Intent_Extra) Reset() {
	*x = CheckinResponse_Intent_Extra{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkin_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinResponse_Intent_Extra) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinResponse_Intent_Extra) ProtoMessage() {}

func (x *CheckinResponse_Intent_Extra) ProtoReflect() protoreflect.Message {
	mi := &file_checkin_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinResponse_Intent_Extra.ProtoReflect.Descriptor instead.
func (*CheckinResponse_Intent_Extra) Descriptor() ([]byte, []int) {
	return file_checkin_proto_rawDescGZIP(), []int{1, 0, 0}
}

func (x *CheckinResponse_Intent_Extra) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *CheckinResponse_Intent_Extra) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

var File_checkin_proto protoreflect.FileDescriptor

var file_checkin_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x9d, 0x12, 0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x07,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x02, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c,
	0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12,
	0x1e, 0x0a, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x65, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d,
	0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x74, 0x61, 0x43, 0x65, 0x72, 0x74,
	0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x74, 0x61, 0x43, 0x65, 0x72, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x73, 0x6e, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x73, 0x6e, 0x12, 0x4e, 0x0a, 0x13, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x6d, 0x61, 0x63,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x0e, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20,
	0x02, 0x28, 0x05, 0x52, 0x08, 0x66, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x75, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0xac, 0x07, 0x0a, 0x07, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69,
	0x6e, 0x12, 0x33, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x02, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x4d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c,
	0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x4d, 0x73, 0x12, 0x33, 0x0a, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x35, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x6d, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67,
	0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x1a, 0xa1, 0x03, 0x0a, 0x05, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x66, 0x69, 0x6e, 0x67, 0x65, 0x72, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x61, 0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x61, 0x64, 0x69, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x6f, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x65, 0x64, 0x1a, 0x47, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x1a, 0x45, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x74, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61,
	0x67, 0x18, 0x01, 0x20, 0x02, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x73, 0x75, 0x6d, 0x1a, 0x88, 0x05, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x75, 0x63,
	0x68, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6b,
	0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x48, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x48, 0x61, 0x72,
	0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x68, 0x61, 0x73,
	0x46, 0x69, 0x76, 0x65, 0x57, 0x61, 0x79, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x68, 0x61, 0x73, 0x46, 0x69, 0x76, 0x65,
	0x57, 0x61, 0x79, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a,
	0x0a, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x44, 0x70, 0x69, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x64, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x44, 0x70, 0x69, 0x12, 0x20, 0x0a,
	0x0b, 0x67, 0x6c, 0x45, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x67, 0x6c, 0x45, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x50, 0x69, 0x78, 0x65, 0x6c, 0x73, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x6c, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x6c,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x6d,
	0x61, 0x78, 0x41, 0x70, 0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a,
	0x65, 0x4d, 0x62, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x41, 0x70,
	0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x62, 0x22,
	0xe8, 0x05, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x6b, 0x12, 0x2f, 0x0a,
	0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x3b,
	0x0a, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x47, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x52, 0x07, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f,
	0x69, 0x64, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x06, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x44, 0x69, 0x66, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x44, 0x69, 0x66, 0x66, 0x12,
	0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xdc, 0x01,
	0x0a, 0x06, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x69, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x69,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69,
	0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6a, 0x61, 0x76, 0x61, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x61, 0x76, 0x61, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x33, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x1a, 0x31, 0x0a, 0x05, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x3c, 0x0a, 0x10,
	0x47, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x58, 0x0a, 0x16, 0x6f, 0x72,
	0x67, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x67, 0x2e, 0x67, 0x6d, 0x73, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x42, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x42,
	0x52, 0x55, 0x48, 0x49, 0x74, 0x73, 0x41, 0x42, 0x75, 0x6e, 0x6e, 0x79, 0x2f, 0x67, 0x6f, 0x2d,
	0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x2d, 0x66, 0x69, 0x72, 0x65, 0x62, 0x61, 0x73, 0x65,
	0x2f, 0x61, 0x70, 0x69,
}

var (
	file_checkin_proto_rawDescOnce sync.Once
	file_checkin_proto_rawDescData = file_checkin_proto_rawDesc
)

func file_checkin_proto_rawDescGZIP() []byte {
	file_checkin_proto_rawDescOnce.Do(func() {
		file_checkin_proto_rawDescData = protoimpl.X.CompressGZIP(file_checkin_proto_rawDescData)
	})
	return file_checkin_proto_rawDescData
}

var file_checkin_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_checkin_proto_goTypes = []interface{}{
	(*CheckinRequest)(nil),                   // 0: CheckinRequest
	(*CheckinResponse)(nil),                  // 1: CheckinResponse
	(*CheckinRequest_Checkin)(nil),           // 2: CheckinRequest.Checkin
	(*CheckinRequest_DeviceConfig)(nil),      // 3: CheckinRequest.DeviceConfig
	(*CheckinRequest_Checkin_Build)(nil),     // 4: CheckinRequest.Checkin.Build
	(*CheckinRequest_Checkin_Event)(nil),     // 5: CheckinRequest.Checkin.Event
	(*CheckinRequest_Checkin_Statistic)(nil), // 6: CheckinRequest.Checkin.Statistic
	(*CheckinResponse_Intent)(nil),           // 7: CheckinResponse.Intent
	(*CheckinResponse_GservicesSetting)(nil), // 8: CheckinResponse.GservicesSetting
	(*CheckinResponse_Intent_Extra)(nil),     // 9: CheckinResponse.Intent.Extra
}
var file_checkin_proto_depIdxs = []int32{
	2, // 0: CheckinRequest.checkin:type_name -> CheckinRequest.Checkin
	3, // 1: CheckinRequest.deviceConfiguration:type_name -> CheckinRequest.DeviceConfig
	7, // 2: CheckinResponse.intent:type_name -> CheckinResponse.Intent
	8, // 3: CheckinResponse.setting:type_name -> CheckinResponse.GservicesSetting
	4, // 4: CheckinRequest.Checkin.build:type_name -> CheckinRequest.Checkin.Build
	5, // 5: CheckinRequest.Checkin.event:type_name -> CheckinRequest.Checkin.Event
	6, // 6: CheckinRequest.Checkin.stat:type_name -> CheckinRequest.Checkin.Statistic
	9, // 7: CheckinResponse.Intent.extra:type_name -> CheckinResponse.Intent.Extra
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_checkin_proto_init() }
func file_checkin_proto_init() {
	if File_checkin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_checkin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinRequest_Checkin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinRequest_DeviceConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkin_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinRequest_Checkin_Build); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkin_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinRequest_Checkin_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkin_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinRequest_Checkin_Statistic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkin_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinResponse_Intent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkin_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinResponse_GservicesSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkin_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinResponse_Intent_Extra); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_checkin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_checkin_proto_goTypes,
		DependencyIndexes: file_checkin_proto_depIdxs,
		MessageInfos:      file_checkin_proto_msgTypes,
	}.Build()
	File_checkin_proto = out.File
	file_checkin_proto_rawDesc = nil
	file_checkin_proto_goTypes = nil
	file_checkin_proto_depIdxs = nil
}
